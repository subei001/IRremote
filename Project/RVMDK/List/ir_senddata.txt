; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\ir_senddata.o --asm_dir=.\List\ --list_dir=.\List\ --depend=.\obj\ir_senddata.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\User\inc -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\RVMDK -ID:\keil\ARM\RV31\INC -ID:\keil\ARM\CMSIS\Include -ID:\keil\ARM\INC\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=528 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\obj\ir_senddata.crf ..\..\User\src\IR_Senddata.c]
                          THUMB

                          AREA ||i.Send_IRdata||, CODE, READONLY, ALIGN=2

                  Send_IRdata PROC
;;;13     ********************************************************/
;;;14     void Send_IRdata(unsigned char x_irdata)
000000  b510              PUSH     {r4,lr}
;;;15     {
;;;16     	unsigned char i;   //循环移位计数
;;;17     	unsigned char irdata;  //数据寄存
;;;18     	
;;;19     	irdata = x_irdata;
000002  4601              MOV      r1,r0
;;;20     	for(i=0;i<8;i++)
000004  2200              MOVS     r2,#0
000006  e028              B        |L1.90|
                  |L1.8|
;;;21     	{
;;;22     		//先发送0.56ms的38KHz红外波（即编码中0.56ms的低电平）
;;;23     		count = 0;
000008  2300              MOVS     r3,#0
00000a  4c15              LDR      r4,|L1.96|
00000c  6023              STR      r3,[r4,#0]  ; count
;;;24     		endcount = 42;	//0.56ms / 13.15us = 42 (42 / 2 = 21，即发送0.56ms的载波中包括21个载波周期)
00000e  232a              MOVS     r3,#0x2a
000010  4c14              LDR      r4,|L1.100|
000012  6023              STR      r3,[r4,#0]  ; endcount
;;;25     		IR_flag = 1; //发送标志
000014  2301              MOVS     r3,#1
000016  4c14              LDR      r4,|L1.104|
000018  7023              STRB     r3,[r4,#0]
;;;26     		while(count < endcount);
00001a  bf00              NOP      
                  |L1.28|
00001c  4b10              LDR      r3,|L1.96|
00001e  681b              LDR      r3,[r3,#0]  ; count
000020  4c10              LDR      r4,|L1.100|
000022  6824              LDR      r4,[r4,#0]  ; endcount
000024  42a3              CMP      r3,r4
000026  d3f9              BCC      |L1.28|
;;;27     
;;;28     		if(irdata&0x01) //判断最低位是0还是1（0则延时(1.125ms-0.56ms=0.565ms)；1则延时(2.25ms-0.56ms=1.685ms)）
000028  f0010301          AND      r3,r1,#1
00002c  b11b              CBZ      r3,|L1.54|
;;;29     		{
;;;30     			
;;;31     			endcount = 43;	  //1.685ms / 13.15us = 128
00002e  232b              MOVS     r3,#0x2b
000030  4c0c              LDR      r4,|L1.100|
000032  6023              STR      r3,[r4,#0]  ; endcount
000034  e002              B        |L1.60|
                  |L1.54|
;;;32     		}
;;;33     		else endcount = 128;	  //0.565ms / 13.15us = 43
000036  2380              MOVS     r3,#0x80
000038  4c0a              LDR      r4,|L1.100|
00003a  6023              STR      r3,[r4,#0]  ; endcount
                  |L1.60|
;;;34     
;;;35     		count = 0;
00003c  2300              MOVS     r3,#0
00003e  4c08              LDR      r4,|L1.96|
000040  6023              STR      r3,[r4,#0]  ; count
;;;36     		IR_flag = 0;	//清除标志位，为下次做准备
000042  4c09              LDR      r4,|L1.104|
000044  7023              STRB     r3,[r4,#0]
;;;37     		while(count < endcount);
000046  bf00              NOP      
                  |L1.72|
000048  4b05              LDR      r3,|L1.96|
00004a  681b              LDR      r3,[r3,#0]  ; count
00004c  4c05              LDR      r4,|L1.100|
00004e  6824              LDR      r4,[r4,#0]  ; endcount
000050  42a3              CMP      r3,r4
000052  d3f9              BCC      |L1.72|
;;;38     
;;;39     		irdata = irdata >> 1;
000054  1049              ASRS     r1,r1,#1
000056  1c53              ADDS     r3,r2,#1              ;20
000058  b2da              UXTB     r2,r3                 ;20
                  |L1.90|
00005a  2a08              CMP      r2,#8                 ;20
00005c  dbd4              BLT      |L1.8|
;;;40     	}		  
;;;41     
;;;42     }
00005e  bd10              POP      {r4,pc}
;;;43     /*******************************************************************
                          ENDP

                  |L1.96|
                          DCD      count
                  |L1.100|
                          DCD      endcount
                  |L1.104|
                          DCD      IR_flag

                          AREA ||i.Write_IRdata||, CODE, READONLY, ALIGN=2

                  Write_IRdata PROC
;;;53     *******************************************************************/
;;;54     void Write_IRdata(unsigned char p_irdata)   
000000  b510              PUSH     {r4,lr}
;;;55     {	
000002  4604              MOV      r4,r0
;;;56     	irdata1 = 3;   //（用户码）自己定义
000004  2003              MOVS     r0,#3
000006  4926              LDR      r1,|L2.160|
000008  7008              STRB     r0,[r1,#0]
;;;57     	irdata2 = 252;	//（用户反码）
00000a  20fc              MOVS     r0,#0xfc
00000c  4925              LDR      r1,|L2.164|
00000e  7008              STRB     r0,[r1,#0]
;;;58     
;;;59     	//发送9ms的引导码（高电平）
;;;60     	
;;;61     	endcount = 684;	 //9ms / 13.15us = 684
000010  f44f702b          MOV      r0,#0x2ac
000014  4924              LDR      r1,|L2.168|
000016  6008              STR      r0,[r1,#0]  ; endcount
;;;62     	count = 0;
000018  2000              MOVS     r0,#0
00001a  4924              LDR      r1,|L2.172|
00001c  6008              STR      r0,[r1,#0]  ; count
;;;63     	IR_flag = 1; //发送标志(发送38K载波)
00001e  2001              MOVS     r0,#1
000020  4923              LDR      r1,|L2.176|
000022  7008              STRB     r0,[r1,#0]
;;;64     	while(count < endcount);
000024  bf00              NOP      
                  |L2.38|
000026  4821              LDR      r0,|L2.172|
000028  6800              LDR      r0,[r0,#0]  ; count
00002a  491f              LDR      r1,|L2.168|
00002c  6809              LDR      r1,[r1,#0]  ; endcount
00002e  4288              CMP      r0,r1
000030  d3f9              BCC      |L2.38|
;;;65     
;;;66     	//发送4.5ms的引导码的结束码（低电平）
;;;67     	count = 0;
000032  2000              MOVS     r0,#0
000034  491d              LDR      r1,|L2.172|
000036  6008              STR      r0,[r1,#0]  ; count
;;;68     	endcount = 342;	 //4.5ms / 13.15us = 342 
000038  f44f70ab          MOV      r0,#0x156
00003c  491a              LDR      r1,|L2.168|
00003e  6008              STR      r0,[r1,#0]  ; endcount
;;;69     	IR_flag = 0; //发送标志（发送0）
000040  2000              MOVS     r0,#0
000042  491b              LDR      r1,|L2.176|
000044  7008              STRB     r0,[r1,#0]
;;;70     	while(count < endcount);
000046  bf00              NOP      
                  |L2.72|
000048  4818              LDR      r0,|L2.172|
00004a  6800              LDR      r0,[r0,#0]  ; count
00004c  4916              LDR      r1,|L2.168|
00004e  6809              LDR      r1,[r1,#0]  ; endcount
000050  4288              CMP      r0,r1
000052  d3f9              BCC      |L2.72|
;;;71     	
;;;72     	Send_IRdata(irdata1);       //发送16位地址的前八位（8位用户码）
000054  4812              LDR      r0,|L2.160|
000056  7800              LDRB     r0,[r0,#0]  ; irdata1
000058  f7fffffe          BL       Send_IRdata
;;;73         Send_IRdata(irdata2);      //发送16位地址的后八位（8位用户反码）
00005c  4811              LDR      r0,|L2.164|
00005e  7800              LDRB     r0,[r0,#0]  ; irdata2
000060  f7fffffe          BL       Send_IRdata
;;;74     	Send_IRdata(p_irdata);	  //发送8位键数据码
000064  4620              MOV      r0,r4
000066  f7fffffe          BL       Send_IRdata
;;;75     	Send_IRdata(~p_irdata); //发送8位键数据反码
00006a  43e1              MVNS     r1,r4
00006c  b2c8              UXTB     r0,r1
00006e  f7fffffe          BL       Send_IRdata
;;;76     	Send_IRdata(0x66);	//结束码（也用于辨别）
000072  2066              MOVS     r0,#0x66
000074  f7fffffe          BL       Send_IRdata
;;;77     
;;;78     	
;;;79     	//最后发送0.56ms的38KHz红外载波（即编码中0.56ms的低电平
;;;80     	count = 0;
000078  2000              MOVS     r0,#0
00007a  490c              LDR      r1,|L2.172|
00007c  6008              STR      r0,[r1,#0]  ; count
;;;81     	endcount = 42;	//0.56ms / 13.15us = 42 (42 / 2 = 21，即发送0.56ms的载波中包括21个载波周期)
00007e  202a              MOVS     r0,#0x2a
000080  4909              LDR      r1,|L2.168|
000082  6008              STR      r0,[r1,#0]  ; endcount
;;;82     	IR_flag = 1; //发送标志
000084  2001              MOVS     r0,#1
000086  490a              LDR      r1,|L2.176|
000088  7008              STRB     r0,[r1,#0]
;;;83     	while(count < endcount);
00008a  bf00              NOP      
                  |L2.140|
00008c  4807              LDR      r0,|L2.172|
00008e  6800              LDR      r0,[r0,#0]  ; count
000090  4905              LDR      r1,|L2.168|
000092  6809              LDR      r1,[r1,#0]  ; endcount
000094  4288              CMP      r0,r1
000096  d3f9              BCC      |L2.140|
;;;84     	IR_flag = 0; 			
000098  2000              MOVS     r0,#0
00009a  4905              LDR      r1,|L2.176|
00009c  7008              STRB     r0,[r1,#0]
;;;85     }	
00009e  bd10              POP      {r4,pc}
                          ENDP

                  |L2.160|
                          DCD      irdata1
                  |L2.164|
                          DCD      irdata2
                  |L2.168|
                          DCD      endcount
                  |L2.172|
                          DCD      count
                  |L2.176|
                          DCD      IR_flag

                          AREA ||.data||, DATA, ALIGN=2

                  irdata1
000000  00                DCB      0x00
                  irdata2
000001  000000            DCB      0x00,0x00,0x00
                  endcount
                          DCD      0x00000000
                  IR_flag
000008  00                DCB      0x00
